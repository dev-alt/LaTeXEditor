name: Build LaTeX Editor for macOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - uses: actions/checkout@v4

      - name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: '6.2.4'
          host: 'mac'
          target: 'desktop'
          arch: 'clang_64'
          dir: '${{ github.workspace }}/qt/'
          install-deps: 'true'

      - name: Create Build Environment
        run: cmake -E make_directory ${{github.workspace}}/build

      - name: Configure CMake
        shell: bash
        working-directory: ${{github.workspace}}/build
        run: |
          export Qt6_DIR=${{ github.workspace }}/qt/6.2.4/macos/lib/cmake/Qt6
          cmake $GITHUB_WORKSPACE -DCMAKE_BUILD_TYPE=Release -DCMAKE_OSX_ARCHITECTURES=x86_64

      - name: Build
        working-directory: ${{github.workspace}}/build
        shell: bash
        run: cmake --build . --config Release

      - name: List build directory
        working-directory: ${{github.workspace}}/build
        run: ls -R

      - name: Locate macdeployqt
        run: |
          MACDEPLOYQT_PATH=$(find ${{ github.workspace }}/qt -name macdeployqt -type f)
          echo "MACDEPLOYQT_PATH=$MACDEPLOYQT_PATH" >> $GITHUB_ENV
          echo "Found macdeployqt at: $MACDEPLOYQT_PATH"

      - name: Deploy Qt
        working-directory: ${{github.workspace}}/build
        run: |
          "$MACDEPLOYQT_PATH" LaTeXEditor.app -dmg

      - name: Code Sign (if certificate available)
        if: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
        env:
          APPLE_CERTIFICATE_BASE64: ${{ secrets.APPLE_CERTIFICATE_BASE64 }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_KEYCHAIN_PASSWORD: ${{ secrets.APPLE_KEYCHAIN_PASSWORD }}
        run: |
          echo $APPLE_CERTIFICATE_BASE64 | base64 --decode > certificate.p12
          security create-keychain -p "$APPLE_KEYCHAIN_PASSWORD" build.keychain
          security default-keychain -s build.keychain
          security unlock-keychain -p "$APPLE_KEYCHAIN_PASSWORD" build.keychain
          security import certificate.p12 -k build.keychain -P "$APPLE_CERTIFICATE_PASSWORD" -T /usr/bin/codesign
          security set-key-partition-list -S apple-tool:,apple:,codesign: -s -k "$APPLE_KEYCHAIN_PASSWORD" build.keychain
          /usr/bin/codesign --force -s "Developer ID Application" --deep --options runtime ${{github.workspace}}/build/LaTeXEditor.app

      - name: Notarize (if API key available)
        if: ${{ secrets.APPLE_API_KEY }}
        env:
          APPLE_API_KEY: ${{ secrets.APPLE_API_KEY }}
          APPLE_API_KEY_ID: ${{ secrets.APPLE_API_KEY_ID }}
          APPLE_API_ISSUER: ${{ secrets.APPLE_API_ISSUER }}
        run: |
          xcrun notarytool submit ${{github.workspace}}/build/LaTeXEditor.dmg --wait --key "$APPLE_API_KEY" --key-id "$APPLE_API_KEY_ID" --issuer "$APPLE_API_ISSUER"
          xcrun stapler staple ${{github.workspace}}/build/LaTeXEditor.app

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: LaTeXEditor-macos-x86_64
          path: ${{github.workspace}}/build/LaTeXEditor.dmg